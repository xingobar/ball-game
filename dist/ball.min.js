var canvas = document.getElementById('ball_canvas'),
	ctx = canvas.getContext('2d'),
	x = canvas.width / 2,
	y = canvas.height - 30,
	ballRadius = 10,
	dx = 2,
	dy = -2,
	paddleHeight = 10,
	paddleWidth = 75,
	paddleX = (canvas.width - paddleWidth) / 2,
	rightPressed = !1,
	leftPressed = !1,
	brickRowCount = 3,
	brickColumnCount = 5,
	brickWidth = 75,
	brickHeight = 20,
	brickPadding = 10,
	brickOffsetTop = 30,
	brickOffsetLeft = 30,
	score = 0,
	lives = 3,
	isAddSpeed = !1,
	totalBricks = brickRowCount * brickColumnCount,
	addSpeedCondition = 5;
document.addEventListener('keydown', keydownHandler, !1);
document.addEventListener('keyup', keyupHandler, !1);
document.addEventListener('mousemove', mouseMoveHandler, !1);
for (var bricks = [], c = 0; c < brickColumnCount; c++) {
	bricks[c] = [];
	for (var r = 0; r < brickRowCount; r++) bricks[c][r] = { x: 0, y: 0, status: 1 };
}
function bricksCollision() {
	for (var a = 0; a < brickColumnCount; a++)
		for (var b = 0; b < brickRowCount; b++) {
			var d = bricks[a][b];
			d.status &&
				x > d.x &&
				x < d.x + brickWidth &&
				y > d.y &&
				y < d.y + brickHeight &&
				((d.status = 0),
				(dy = -dy),
				score++,
				--totalBricks,
				totalBricks <= addSpeedCondition && (isAddSpeed || ((dx *= 2), (dy *= 2)), (isAddSpeed = !0)),
				score == brickColumnCount * brickRowCount && (alert('YOU WIN!'), document.location.reload()));
		}
}
function drawLives() {
	ctx.font = '16px Arial';
	ctx.fillStyle = '#0095DD';
	ctx.fillText('Lives: ' + lives, canvas.width - 65, 20);
}
function drawBricks() {
	for (var a = 0; a < brickColumnCount; a++)
		for (var b = 0; b < brickRowCount; b++)
			if (bricks[a][b].status) {
				var d = a * (brickWidth + brickPadding) + brickOffsetLeft,
					e = b * (brickHeight + brickPadding) + brickOffsetTop;
				bricks[a][b].x = d;
				bricks[a][b].y = e;
				ctx.beginPath();
				ctx.rect(d, e, brickWidth, brickHeight);
				ctx.fillStyle = '#0095DD';
				ctx.fill();
				ctx.closePath();
			}
}
function drawScore() {
	ctx.font = '16px Arial';
	ctx.fillStyle = '#0095DD';
	ctx.fillText('Score: ' + score, 8, 20);
}
function drawerBall() {
	ctx.beginPath();
	ctx.arc(x, y, ballRadius, 0, 2 * Math.PI, !1);
	ctx.fillStyle = 'blue';
	ctx.fill();
	ctx.closePath();
}
function drawPaddle() {
	ctx.beginPath();
	ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);
	ctx.fillStyle = '#0095DD';
	ctx.fill();
	ctx.closePath();
}
function keyupHandler(a) {
	39 === a.keyCode && (rightPressed = !1);
	37 === a.keyCode && (leftPressed = !1);
}
function keydownHandler(a) {
	39 === a.keyCode && (rightPressed = !0);
	37 === a.keyCode && (leftPressed = !0);
}
function mouseMoveHandler(a) {
	a = a.clientX - canvas.offsetLeft;
	0 < a && a < canvas.width && (paddleX = a - paddleWidth / 2);
}
function getRandomInt(a) {
	return Math.floor(Math.random() * Math.floor(a));
}
function draw() {
	isAddSpeed
		? ((ctx.fillStyle = 'rgba(255, 255, 255, 0.3)'), ctx.fillRect(0, 0, canvas.width, canvas.height))
		: ctx.clearRect(0, 0, canvas.width, canvas.height);
	drawBricks();
	drawerBall();
	drawPaddle();
	drawScore();
	drawLives();
	bricksCollision();
	y + dy < ballRadius
		? (dy = -dy)
		: y + dy > canvas.height - ballRadius &&
			(x > paddleX && x < paddleX + paddleWidth
				? (dy = -dy)
				: (lives--,
					0 >= lives
						? (alert('Game Over'), document.location.reload())
						: ((x = canvas.width / getRandomInt(5)),
							(y = canvas.height - getRandomInt(50)),
							(dx = 2),
							(dy = -2),
							(paddleX = (canvas.width - paddleWidth) / 2))));
	if (x + dx < ballRadius || x + dx > canvas.width - ballRadius) dx = -dx;
	rightPressed && paddleX < canvas.width - paddleWidth && (paddleX += 7);
	leftPressed && 0 < paddleX && (paddleX -= 7);
	x += dx;
	y += dy;
	requestAnimationFrame(draw);
}
draw();
